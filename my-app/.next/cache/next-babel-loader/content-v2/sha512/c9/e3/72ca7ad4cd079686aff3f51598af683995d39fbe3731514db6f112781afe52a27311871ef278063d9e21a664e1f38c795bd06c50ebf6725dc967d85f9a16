{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"C:/Users/Owini/OneDrive/Desktop/NFTYVacation/my-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/Owini/OneDrive/Desktop/NFTYVacation/my-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Owini\\\\OneDrive\\\\Desktop\\\\NFTYVacation\\\\my-app\\\\src\\\\components\\\\Hero\\\\RenderButton.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Button from '../../styles/GlobalComponents/Button';\nimport Web3Modal from 'web3modal';\nimport { useRef, useEffect } from 'react';\nimport { providers } from 'ethers';\n\nvar RenderButton = function RenderButton() {\n  _s();\n\n  var web3ModalRef = useRef(); // always returns object as current\n  // const getProviderOrSigner = async (needSigner = false) => {\n  //     const provider = await web3ModalRef.current.connect();\n  //     const web3Provider = new providers.Web3Provider(provider);\n  //     const {chainId} = await web3Provider.getNetwork();\n  //     if (chainId !==4) {\n  //       alert (\"change to rinkeby network\");\n  //       throw new Error (\"change to rinkeby\");\n  //       if (needSigner){\n  //         const signer = web3ModalRef.getSigner();\n  //           return signer;\n  //       }\n  //       return provider;\n  //     };\n  // };\n\n  var getSignerOrProvider = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var needSigner,\n          provider,\n          web3Provider,\n          _yield$web3Provider$g,\n          chainId,\n          signer,\n          _args = arguments;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              needSigner = _args.length > 0 && _args[0] !== undefined ? _args[0] : false;\n              _context.next = 3;\n              return web3ModalRef.current.connect();\n\n            case 3:\n              provider = _context.sent;\n              web3Provider = new providers.Web3Provider(provider);\n              _context.next = 7;\n              return web3Provider.getNetwork();\n\n            case 7:\n              _yield$web3Provider$g = _context.sent;\n              chainId = _yield$web3Provider$g.chainId;\n\n              if (!(chainId !== 4)) {\n                _context.next = 12;\n                break;\n              }\n\n              alert(\"USE RINKEEBY NETWORK\");\n              throw new Error(\"Change network to Rinkeby\");\n\n            case 12:\n              if (!needSigner) {\n                _context.next = 15;\n                break;\n              }\n\n              signer = web3Provider.getSigner();\n              return _context.abrupt(\"return\", signer);\n\n            case 15:\n              return _context.abrupt(\"return\", provider);\n\n            case 16:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function getSignerOrProvider() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    web3ModalRef.current = new Web3Modal({\n      network: 'rinkeby',\n      providerOptions: {}\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Button, {\n    onClick: function onClick() {\n      return console.log('Connected');\n    },\n    children: \" wooo \"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(RenderButton, \"/0Fcz7nQELhoHM9hhLJ+LSg/v/w=\");\n\n_c = RenderButton;\nexport default RenderButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"RenderButton\");","map":{"version":3,"sources":["C:/Users/Owini/OneDrive/Desktop/NFTYVacation/my-app/src/components/Hero/RenderButton.js"],"names":["React","Button","Web3Modal","useRef","useEffect","providers","RenderButton","web3ModalRef","getSignerOrProvider","needSigner","current","connect","provider","web3Provider","Web3Provider","getNetwork","chainId","alert","Error","signer","getSigner","network","providerOptions","console","log"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,sCAAnB;AACA,OAAOC,SAAP,MAAsB,WAAtB;AACA,SAAQC,MAAR,EAAgBC,SAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,QAA0B,QAA1B;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AAAA;;AAE3B,MAAMC,YAAY,GAAGJ,MAAM,EAA3B,CAF2B,CAEI;AAE/B;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMK,mBAAmB;AAAA,wEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAOC,cAAAA,UAAP,2DAAoB,KAApB;AAAA;AAAA,qBACHF,YAAY,CAACG,OAAb,CAAqBC,OAArB,EADG;;AAAA;AACpBC,cAAAA,QADoB;AAEpBC,cAAAA,YAFoB,GAEL,IAAIR,SAAS,CAACS,YAAd,CAA2BF,QAA3B,CAFK;AAAA;AAAA,qBAGAC,YAAY,CAACE,UAAb,EAHA;;AAAA;AAAA;AAGlBC,cAAAA,OAHkB,yBAGlBA,OAHkB;;AAAA,oBAItBA,OAAO,KAAK,CAJU;AAAA;AAAA;AAAA;;AAKxBC,cAAAA,KAAK,CAAC,sBAAD,CAAL;AALwB,oBAMlB,IAAIC,KAAJ,CAAU,2BAAV,CANkB;;AAAA;AAAA,mBAQtBT,UARsB;AAAA;AAAA;AAAA;;AASlBU,cAAAA,MATkB,GASTN,YAAY,CAACO,SAAb,EATS;AAAA,+CAUjBD,MAViB;;AAAA;AAAA,+CAYnBP,QAZmB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAnBJ,mBAAmB;AAAA;AAAA;AAAA,KAAzB;;AAeEJ,EAAAA,SAAS,CAAC,YAAQ;AAEdG,IAAAA,YAAY,CAACG,OAAb,GAAuB,IAAIR,SAAJ,CAAc;AACnCmB,MAAAA,OAAO,EAAE,SAD0B;AAEnCC,MAAAA,eAAe,EAAE;AAFkB,KAAd,CAAvB;AAMH,GARQ,EAQN,EARM,CAAT;AAYA,sBACE,QAAC,MAAD;AAAS,IAAA,OAAO,EAAE;AAAA,aAAMC,OAAO,CAACC,GAAR,CAAY,WAAZ,CAAN;AAAA,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAGD,CAnDD;;GAAMlB,Y;;KAAAA,Y;AAqDN,eAAeA,YAAf","sourcesContent":["import React from 'react';\r\nimport Button from '../../styles/GlobalComponents/Button';\r\nimport Web3Modal from 'web3modal';\r\nimport {useRef, useEffect} from 'react';\r\nimport { providers } from 'ethers';\r\n\r\nconst RenderButton = () => {\r\n\r\nconst web3ModalRef = useRef(); // always returns object as current\r\n\r\n// const getProviderOrSigner = async (needSigner = false) => {\r\n\r\n//     const provider = await web3ModalRef.current.connect();\r\n//     const web3Provider = new providers.Web3Provider(provider);\r\n//     const {chainId} = await web3Provider.getNetwork();\r\n//     if (chainId !==4) {\r\n//       alert (\"change to rinkeby network\");\r\n//       throw new Error (\"change to rinkeby\");\r\n    \r\n//       if (needSigner){\r\n//         const signer = web3ModalRef.getSigner();\r\n//           return signer;\r\n//       }\r\n//       return provider;\r\n//     };\r\n// };\r\n\r\nconst getSignerOrProvider = async (needSigner = false) => {\r\n  const provider = await web3ModalRef.current.connect();\r\n  const web3Provider = new providers.Web3Provider(provider);\r\n  const { chainId } = await web3Provider.getNetwork();\r\n  if (chainId !== 4) {\r\n    alert(\"USE RINKEEBY NETWORK\");\r\n    throw new Error(\"Change network to Rinkeby\");\r\n  }\r\n  if (needSigner) {\r\n    const signer = web3Provider.getSigner();\r\n    return signer;\r\n  }\r\n  return provider;\r\n};\r\n\r\n  useEffect(()  =>  {\r\n\r\n      web3ModalRef.current = new Web3Modal({\r\n        network: 'rinkeby',\r\n        providerOptions: {},\r\n        \r\n  });\r\n\r\n  }, []);\r\n\r\n\r\n\r\n  return (\r\n    <Button  onClick={() => console.log('Connected')}> wooo </Button>\r\n  )\r\n}\r\n\r\nexport default RenderButton"]},"metadata":{},"sourceType":"module"}