{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport React from 'react';\nimport Button from '../../styles/GlobalComponents/Button';\nimport Web3Modal from 'web3modal';\nimport { useRef, useEffect, useState } from 'react';\nimport { providers } from 'ethers';\n\nconst RenderButton = () => {\n  const {\n    0: connectedWallet,\n    1: setconnectedWallet\n  } = useState(false);\n  const web3ModalRef = useRef(); // always returns object as current\n\n  const getSignerOrProvider = async (needSigner = false) => {\n    const provider = await web3ModalRef.current.connect();\n    const web3Provider = new providers.Web3Provider(provider);\n    const {\n      chainId\n    } = await web3Provider.getNetwork();\n\n    if (chainId !== 4) {\n      alert(\"USE RINKEEBY NETWORK\");\n      throw new Error(\"Change network to Rinkeby\");\n    }\n\n    if (needSigner) {\n      const signer = web3Provider.getSigner();\n      return signer;\n    }\n\n    return provider;\n  };\n\n  const connectWallet = async () => {\n    try {\n      await getSignerOrProvider();\n      setconnectedWallet(true);\n    } catch (error) {\n      console.log(\" error\", error);\n    }\n  };\n\n  useEffect(() => {\n    web3ModalRef.current = new Web3Modal({\n      network: 'rinkeby',\n      providerOptions: {}\n    });\n  }, []);\n\n  if (!connectedWallet) {\n    return /*#__PURE__*/_jsx(Button, {\n      onClick: connectWallet,\n      children: \" Connect Wallet\"\n    });\n  } else return /*#__PURE__*/_jsx(Button, {\n    onClick: mint,\n    children: \" Mint \"\n  });\n};\n\nexport default RenderButton;","map":null,"metadata":{},"sourceType":"module"}