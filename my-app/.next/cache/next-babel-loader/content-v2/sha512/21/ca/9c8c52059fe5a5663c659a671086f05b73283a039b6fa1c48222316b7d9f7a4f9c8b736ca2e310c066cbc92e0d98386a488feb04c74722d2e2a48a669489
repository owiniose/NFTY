{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Owini\\\\OneDrive\\\\Desktop\\\\NFTYVacation\\\\my-app\\\\src\\\\components\\\\Hero\\\\RenderButton.js\";\nimport React from 'react';\nimport Button from '../../styles/GlobalComponents/Button';\nimport Web3Modal from 'web3modal';\nimport { useRef, useEffect, useState } from 'react';\nimport { providers } from 'ethers';\n\nconst RenderButton = () => {\n  const {\n    0: connectedWallet,\n    1: setconnectedWallet\n  } = useState(false);\n  const web3ModalRef = useRef(); // always returns object as current\n\n  const getSignerOrProvider = async (needSigner = false) => {\n    const provider = await web3ModalRef.current.connect();\n    const web3Provider = new providers.Web3Provider(provider);\n    const {\n      chainId\n    } = await web3Provider.getNetwork();\n\n    if (chainId !== 4) {\n      alert(\"USE RINKEEBY NETWORK\");\n      throw new Error(\"Change network to Rinkeby\");\n    }\n\n    if (needSigner) {\n      const signer = web3Provider.getSigner();\n      return signer;\n    }\n\n    return provider;\n  };\n\n  const connectWallet = async () => {\n    try {\n      await getSignerOrProvider();\n      setconnectedWallet(true);\n    } catch (error) {\n      console.log(\" error\", error);\n    }\n  };\n\n  useEffect(() => {\n    web3ModalRef.current = new Web3Modal({\n      network: 'rinkeby',\n      providerOptions: {}\n    });\n  }, []);\n\n  if (!connectedWallet) {\n    return /*#__PURE__*/_jsxDEV(Button, {\n      onClick: connectWallet,\n      children: \" Connect Wallet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Button, {\n    onClick: connectWallet,\n    children: \" Connect Wallet \"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n\nexport default RenderButton;","map":{"version":3,"sources":["C:/Users/Owini/OneDrive/Desktop/NFTYVacation/my-app/src/components/Hero/RenderButton.js"],"names":["React","Button","Web3Modal","useRef","useEffect","useState","providers","RenderButton","connectedWallet","setconnectedWallet","web3ModalRef","getSignerOrProvider","needSigner","provider","current","connect","web3Provider","Web3Provider","chainId","getNetwork","alert","Error","signer","getSigner","connectWallet","error","console","log","network","providerOptions"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,sCAAnB;AACA,OAAOC,SAAP,MAAsB,WAAtB;AACA,SAAQC,MAAR,EAAgBC,SAAhB,EAA2BC,QAA3B,QAA0C,OAA1C;AACA,SAASC,SAAT,QAA0B,QAA1B;;AAEA,MAAMC,YAAY,GAAG,MAAM;AAE3B,QAAM;AAAA,OAAEC,eAAF;AAAA,OAAoBC;AAApB,MAA0CJ,QAAQ,CAAE,KAAF,CAAxD;AAEA,QAAMK,YAAY,GAAGP,MAAM,EAA3B,CAJ2B,CAII;;AAI/B,QAAMQ,mBAAmB,GAAG,OAAOC,UAAU,GAAG,KAApB,KAA8B;AACxD,UAAMC,QAAQ,GAAG,MAAMH,YAAY,CAACI,OAAb,CAAqBC,OAArB,EAAvB;AACA,UAAMC,YAAY,GAAG,IAAIV,SAAS,CAACW,YAAd,CAA2BJ,QAA3B,CAArB;AACA,UAAM;AAAEK,MAAAA;AAAF,QAAc,MAAMF,YAAY,CAACG,UAAb,EAA1B;;AACA,QAAID,OAAO,KAAK,CAAhB,EAAmB;AACjBE,MAAAA,KAAK,CAAC,sBAAD,CAAL;AACA,YAAM,IAAIC,KAAJ,CAAU,2BAAV,CAAN;AACD;;AACD,QAAIT,UAAJ,EAAgB;AACd,YAAMU,MAAM,GAAGN,YAAY,CAACO,SAAb,EAAf;AACA,aAAOD,MAAP;AACD;;AACD,WAAOT,QAAP;AACD,GAbD;;AAeA,QAAMW,aAAa,GAAG,YAAY;AAChC,QAAI;AACF,YAAMb,mBAAmB,EAAzB;AACAF,MAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACD,KAHD,CAGE,OAAOgB,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,KAAtB;AACD;AACF,GAPD;;AASErB,EAAAA,SAAS,CAAC,MAAQ;AAEdM,IAAAA,YAAY,CAACI,OAAb,GAAuB,IAAIZ,SAAJ,CAAc;AACnC0B,MAAAA,OAAO,EAAE,SAD0B;AAEnCC,MAAAA,eAAe,EAAE;AAFkB,KAAd,CAAvB;AAMH,GARQ,EAQN,EARM,CAAT;;AAWE,MAAI,CAACrB,eAAL,EAAqB;AACnB,wBACE,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAGgB,aAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAGD;;AAEH,sBACE,QAAC,MAAD;AAAS,IAAA,OAAO,EAAEA,aAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAGD,CApDD;;AAsDA,eAAejB,YAAf","sourcesContent":["import React from 'react';\r\nimport Button from '../../styles/GlobalComponents/Button';\r\nimport Web3Modal from 'web3modal';\r\nimport {useRef, useEffect, useState} from 'react';\r\nimport { providers } from 'ethers';\r\n\r\nconst RenderButton = () => {\r\n\r\nconst [ connectedWallet , setconnectedWallet] = useState (false);\r\n\r\nconst web3ModalRef = useRef(); // always returns object as current\r\n\r\n\r\n\r\nconst getSignerOrProvider = async (needSigner = false) => {\r\n  const provider = await web3ModalRef.current.connect();\r\n  const web3Provider = new providers.Web3Provider(provider);\r\n  const { chainId } = await web3Provider.getNetwork();\r\n  if (chainId !== 4) {\r\n    alert(\"USE RINKEEBY NETWORK\");\r\n    throw new Error(\"Change network to Rinkeby\");\r\n  }\r\n  if (needSigner) {\r\n    const signer = web3Provider.getSigner();\r\n    return signer;\r\n  }\r\n  return provider;\r\n};\r\n\r\nconst connectWallet = async () => {\r\n  try {\r\n    await getSignerOrProvider();\r\n    setconnectedWallet(true);\r\n  } catch (error) {\r\n    console.log(\" error\", error);\r\n  }\r\n};\r\n\r\n  useEffect(()  =>  {\r\n\r\n      web3ModalRef.current = new Web3Modal({\r\n        network: 'rinkeby',\r\n        providerOptions: {},\r\n        \r\n  });\r\n\r\n  }, []);\r\n\r\n\r\n    if (!connectedWallet){\r\n      return(\r\n        <Button onClick ={connectWallet}> Connect Wallet</Button>\r\n      )\r\n    }\r\n\r\n  return (\r\n    <Button  onClick={connectWallet}> Connect Wallet </Button>\r\n  )\r\n}\r\n\r\nexport default RenderButton"]},"metadata":{},"sourceType":"module"}