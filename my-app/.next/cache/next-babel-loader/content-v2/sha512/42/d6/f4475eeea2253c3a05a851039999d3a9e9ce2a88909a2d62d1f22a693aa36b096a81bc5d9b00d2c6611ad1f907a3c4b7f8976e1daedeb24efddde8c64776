{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Owini\\\\OneDrive\\\\Desktop\\\\NFTYVacation\\\\my-app\\\\src\\\\components\\\\Hero\\\\RenderButton.js\";\nimport React from 'react';\nimport Button from '../../styles/GlobalComponents/Button';\nimport Web3Modal from 'web3modal';\nimport { useRef, useEffect } from 'react';\nimport { providers } from 'ethers';\n\nconst RenderButton = () => {\n  const web3ModalRef = useRef(); // always returns object as current\n  // const getProviderOrSigner = async (needSigner = false) => {\n  //     const provider = await web3ModalRef.current.connect();\n  //     const web3Provider = new providers.Web3Provider(provider);\n  //     const {chainId} = await web3Provider.getNetwork();\n  //     if (chainId !==4) {\n  //       alert (\"change to rinkeby network\");\n  //       throw new Error (\"change to rinkeby\");\n  //       if (needSigner){\n  //         const signer = web3ModalRef.getSigner();\n  //           return signer;\n  //       }\n  //       return provider;\n  //     };\n  // };\n\n  const getSignerOrProvider = async (needSigner = false) => {\n    const provider = await web3ModalRef.current.connect();\n    const web3Provider = new providers.Web3Provider(provider);\n    const {\n      chainId\n    } = await web3Provider.getNetwork();\n\n    if (chainId !== 4) {\n      alert(\"USE RINKEEBY NETWORK\");\n      throw new Error(\"Change network to Rinkeby\");\n    }\n\n    if (needSigner) {\n      const signer = web3Provider.getSigner();\n      return signer;\n    }\n\n    return provider;\n  };\n\n  useEffect(() => {\n    web3ModalRef.current = new Web3Modal({\n      network: 'rinkeby',\n      providerOptions: {}\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Button, {\n    onClick: () => console.log('Connected'),\n    children: \" wooo \"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n\nexport default RenderButton;","map":{"version":3,"sources":["C:/Users/Owini/OneDrive/Desktop/NFTYVacation/my-app/src/components/Hero/RenderButton.js"],"names":["React","Button","Web3Modal","useRef","useEffect","providers","RenderButton","web3ModalRef","getSignerOrProvider","needSigner","provider","current","connect","web3Provider","Web3Provider","chainId","getNetwork","alert","Error","signer","getSigner","network","providerOptions","console","log"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,sCAAnB;AACA,OAAOC,SAAP,MAAsB,WAAtB;AACA,SAAQC,MAAR,EAAgBC,SAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,QAA0B,QAA1B;;AAEA,MAAMC,YAAY,GAAG,MAAM;AAE3B,QAAMC,YAAY,GAAGJ,MAAM,EAA3B,CAF2B,CAEI;AAE/B;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAMK,mBAAmB,GAAG,OAAOC,UAAU,GAAG,KAApB,KAA8B;AACxD,UAAMC,QAAQ,GAAG,MAAMH,YAAY,CAACI,OAAb,CAAqBC,OAArB,EAAvB;AACA,UAAMC,YAAY,GAAG,IAAIR,SAAS,CAACS,YAAd,CAA2BJ,QAA3B,CAArB;AACA,UAAM;AAAEK,MAAAA;AAAF,QAAc,MAAMF,YAAY,CAACG,UAAb,EAA1B;;AACA,QAAID,OAAO,KAAK,CAAhB,EAAmB;AACjBE,MAAAA,KAAK,CAAC,sBAAD,CAAL;AACA,YAAM,IAAIC,KAAJ,CAAU,2BAAV,CAAN;AACD;;AACD,QAAIT,UAAJ,EAAgB;AACd,YAAMU,MAAM,GAAGN,YAAY,CAACO,SAAb,EAAf;AACA,aAAOD,MAAP;AACD;;AACD,WAAOT,QAAP;AACD,GAbD;;AAeEN,EAAAA,SAAS,CAAC,MAAQ;AAEdG,IAAAA,YAAY,CAACI,OAAb,GAAuB,IAAIT,SAAJ,CAAc;AACnCmB,MAAAA,OAAO,EAAE,SAD0B;AAEnCC,MAAAA,eAAe,EAAE;AAFkB,KAAd,CAAvB;AAMH,GARQ,EAQN,EARM,CAAT;AAYA,sBACE,QAAC,MAAD;AAAS,IAAA,OAAO,EAAE,MAAMC,OAAO,CAACC,GAAR,CAAY,WAAZ,CAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAGD,CAnDD;;AAqDA,eAAelB,YAAf","sourcesContent":["import React from 'react';\r\nimport Button from '../../styles/GlobalComponents/Button';\r\nimport Web3Modal from 'web3modal';\r\nimport {useRef, useEffect} from 'react';\r\nimport { providers } from 'ethers';\r\n\r\nconst RenderButton = () => {\r\n\r\nconst web3ModalRef = useRef(); // always returns object as current\r\n\r\n// const getProviderOrSigner = async (needSigner = false) => {\r\n\r\n//     const provider = await web3ModalRef.current.connect();\r\n//     const web3Provider = new providers.Web3Provider(provider);\r\n//     const {chainId} = await web3Provider.getNetwork();\r\n//     if (chainId !==4) {\r\n//       alert (\"change to rinkeby network\");\r\n//       throw new Error (\"change to rinkeby\");\r\n    \r\n//       if (needSigner){\r\n//         const signer = web3ModalRef.getSigner();\r\n//           return signer;\r\n//       }\r\n//       return provider;\r\n//     };\r\n// };\r\n\r\nconst getSignerOrProvider = async (needSigner = false) => {\r\n  const provider = await web3ModalRef.current.connect();\r\n  const web3Provider = new providers.Web3Provider(provider);\r\n  const { chainId } = await web3Provider.getNetwork();\r\n  if (chainId !== 4) {\r\n    alert(\"USE RINKEEBY NETWORK\");\r\n    throw new Error(\"Change network to Rinkeby\");\r\n  }\r\n  if (needSigner) {\r\n    const signer = web3Provider.getSigner();\r\n    return signer;\r\n  }\r\n  return provider;\r\n};\r\n\r\n  useEffect(()  =>  {\r\n\r\n      web3ModalRef.current = new Web3Modal({\r\n        network: 'rinkeby',\r\n        providerOptions: {},\r\n        \r\n  });\r\n\r\n  }, []);\r\n\r\n\r\n\r\n  return (\r\n    <Button  onClick={() => console.log('Connected')}> wooo </Button>\r\n  )\r\n}\r\n\r\nexport default RenderButton"]},"metadata":{},"sourceType":"module"}